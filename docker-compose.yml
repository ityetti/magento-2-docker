version: '2'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: ${PROJECT_NAME}-nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx-proxy.conf:/etc/nginx/nginx.conf
    networks:
      - magento

  nginx:
    build: ./nginx
    container_name: ${PROJECT_NAME}-nginx
    volumes:
      - ./magento2:/home/magento:cached
    depends_on:
      - mysql
      - redis
      - php-fpm
      - nginx-proxy
    networks:
      - magento
    environment:
      - VIRTUAL_HOST=${PROJECT_VIRTUAL_HOST}

  php-fpm:
    build: ./php-fpm
    container_name: ${PROJECT_NAME}-php-fpm
    volumes:
      - ./magento2:/home/magento:cached
      - ./php-fpm/php.ini:/etc/php.ini
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - opensearch
    networks:
      - magento
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
      XDEBUG_CONFIG: "client_host=host.docker.internal"

  redis:
    image: arm64v8/redis:6.2
    container_name: ${PROJECT_NAME}-redis
    ports:
      - "6379:6379"
    networks:
      - magento

  mysql:
    image: arm64v8/mysql:8.0.34
    container_name: ${PROJECT_NAME}-mysql
    volumes:
      - ./mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    environment:
      MYSQL_DATABASE: 'magento_db'
      MYSQL_ROOT_PASSWORD: 'root_pass'
      MYSQL_USER: 'magento_user'
      MYSQL_PASSWORD: 'PASSWD#'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'false'
    ports:
      - "3308:3306"
    networks:
      - magento

  mailhog:
    platform: linux/x86_64
    image: mailhog/mailhog
    container_name: ${PROJECT_NAME}-mailhog
    environment:
      - VIRTUAL_HOST=mail.${PROJECT_VIRTUAL_HOST}
      - VIRTUAL_PORT=8025
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - magento
    expose:
      - 8025

  rabbitmq:
    image: arm64v8/rabbitmq:3.9-management
    container_name: ${PROJECT_NAME}-rabbitmq
    environment:
      - VIRTUAL_HOST=rabbit.${PROJECT_VIRTUAL_HOST}
      - VIRTUAL_PORT=15672
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
    networks:
      - magento
    expose:
      - 15672

  opensearch:
    image: opensearchproject/opensearch:1.2.4
    container_name: ${PROJECT_NAME}-opensearch
    ports:
      - "9200:9200"
      - "9600:9600"
    restart: always
    networks:
      - magento
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - "http.host=0.0.0.0"
      - "DISABLE_SECURITY_PLUGIN=true"
      - VIRTUAL_HOST=search.${PROJECT_VIRTUAL_HOST}
      - VIRTUAL_PORT=9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  opensearch-dashboard:
    image: opensearchproject/opensearch-dashboards:1.2.0
    container_name: ${PROJECT_NAME}-opensearch-dashboard
    restart: always
    networks:
      - magento
    environment:
      - VIRTUAL_HOST=dashboard.${PROJECT_VIRTUAL_HOST}
      - VIRTUAL_PORT=5601
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
      - "OPENSEARCH_HOSTS=http://opensearch:9200"
    volumes:
      - ./opensearch/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
    ports:
      - "5601:5601"
    expose:
      - "5601"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536

  varnish:
    image: arm64v8/varnish:7.0
    container_name: ${PROJECT_NAME}-varnish
    restart: always
    networks:
      - magento
    ports:
      - "6082:6082"
    depends_on:
      - nginx
    links:
      - nginx
    volumes:
      - ./varnish/varnish.vcl:/etc/varnish/default.vcl
    environment:
      - CACHE_SIZE=1G

networks:
  magento:
    driver: bridge